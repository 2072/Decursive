<Ui xmlns="http://www.blizzard.com/wow/ui/"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xsi:schemaLocation="http://www.blizzard.com/wow/ui/">
    <!--
    This file is part of Decursive.
    
    Decursive (v @project-version@) add-on for World of Warcraft UI
    Copyright (C) 2006-2007-2008-2009 John Wellesz (archarodim AT teaser.fr) ( http://www.2072productions.com/?to=decursive.php )

    This is the continued work of the original Decursive (v1.9.4) by Quu
    "Decursive 1.9.4" is in public domain ( www.quutar.com )

    Decursive is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Decursive is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Decursive.  If not, see <http://www.gnu.org/licenses/>.
    -->
    <Script>

-- big ugly scary fatal error message display function {{{
if not DcrFatalError then
-- the beautiful error popup : {{{ -
StaticPopupDialogs["DECURSIVE_ERROR_FRAME"] = {
    text = "|cFFFF0000Decursive Error:|r\n%s",
    button1 = "OK",
    OnAccept = function()
	return false;
    end,
    timeout = 0,
    whileDead = 1,
    hideOnEscape = 1,
    showAlert = 1,
    }; -- }}}
DcrFatalError = function (TheError) StaticPopup_Show ("DECURSIVE_ERROR_FRAME", TheError); end
end
-- }}}
	if not DcrLoadedFiles or not DcrLoadedFiles["Dcr_DebuffsFrame.lua"] then
	    if not DcrCorrupted then DcrFatalError("Decursive installation is corrupted! (Dcr_DebuffsFrame.lua not loaded)"); end;
	    DcrCorrupted = true;
	    return;
	end

	-- Dcr:SetDateAndRevision("$Date: 2008-04-10 00:53:55 +0200 (jeu., 10 avr. 2008) $", "$Revision: 68827 $");
    </Script>

    <Frame name="DcrMUFsContainer" frameStrata="MEDIUM" toplevel="true" enableMouse="true" movable="true" hidden="true" parent="UIParent">
	<Size>
	    <AbsDimension x="20" y="20" />
	</Size>
	<Anchors>
	    <Anchor point="CENTER" relativePoint="CENTER">
		<Offset>
		    <AbsDimension x="200" y="250"/>
		</Offset>
	    </Anchor>
	</Anchors>
	<Scripts>
	    <OnLoad>
		this.UpdateYourself = true;
		this.MaxUnit = 5;
		this.UnitShown = 0;
	    </OnLoad>
	</Scripts>
	<Frames>
	    <Button name="$parentDragButton">
		<Size>
		    <AbsDimension x="20" y="20" />
		</Size>
		<Anchors>
		    <Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT">
			<Offset>
			    <AbsDimension x="0" y="0"/>
			</Offset>
		    </Anchor>
		</Anchors>
		<HighlightTexture file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD" />
		<!--<HighlightTexture file="Interface\Buttons\ButtonHilight-Square" alphaMode="ADD" /> -->
		<!--<HighlightTexture file="Interface\Buttons\UI-Common-MouseHilight" alphaMode="ADD"/> -->

		<Scripts>
		    <OnMouseUp>
			if ( this.isMoving ) then
			    this:GetParent():StopMovingOrSizing();
			    this.isMoving = false;
			    Dcr.MicroUnitF.DraggingHandle = false;
			    Dcr.MicroUnitF:SavePos();
			    Dcr.MicroUnitF:Place();
			    Dcr.MicroUnitF:SavePos();
			elseif Dcr.Status.MouseOveringCorner then
			    Dcr:QuickAccess(this, arg1);
			end
		    </OnMouseUp>
		    <OnMouseDown>
			if (   arg1 == "LeftButton" and IsAltKeyDown() ) then
			    this.isMoving = true;
			    Dcr.MicroUnitF.DraggingHandle = true;
			    this:GetParent():StartMoving();
			end
		    </OnMouseDown>

		    <OnHide>
			if ( this.isMoving ) then
			    this:GetParent():StopMovingOrSizing();
			    this.isMoving = false;
			    Dcr.MicroUnitF.DraggingHandle = false;
			end
		    </OnHide>
		    <OnEnter>
			Dcr.Status.MouseOveringCorner = true;
			Dcr.MicroUnitF:OnCornerEnter();
		    </OnEnter>
		    <OnLeave>
			Dcr.Status.MouseOveringCorner = false;

			if (Dcr.profile.DebuffsFrameShowHelp) then
			GameTooltip:Hide();
			end;
		    </OnLeave>
		</Scripts>
	    </Button>
	    
	</Frames>
    </Frame>

    <!-- Templates -->
    <Cooldown name="DcrMicroUnitCDTemplate" virtual="true" hidden="true" setAllPoints="false">
	<Size>
	    <AbsDimension x="16" y="16"/>
	</Size>
	<Anchors>
	    <Anchor point="CENTER" relativePoint="CENTER">
		<Offset>
		    <AbsDimension x="0" y="0"/>
		</Offset>
	    </Anchor>
	</Anchors>
    </Cooldown>

    <Button name="DcrMicroUnitTemplateSecure" inherits="SecureUnitButtonTemplate" virtual="true" hidden="true">
	<Size>
	    <AbsDimension x="20" y="20"/>
	</Size>

	<Scripts>
	    <OnLoad>
		Dcr.MicroUnitF:OnLoad();
	    </OnLoad>
	    <OnEnter>
		Dcr.MicroUnitF:OnEnter();
	    </OnEnter>
	    <OnLeave>
		Dcr.MicroUnitF:OnLeave();
	    </OnLeave>
	</Scripts>
    </Button>


    <FontString name="DcrMicroUnitChronoFont" inherits="NumberFontNormalSmall" maxLines="1" text=" " virtual="true"> <!-- {{{ -->
	<Anchors>
	    <Anchor point="CENTER" relativePoint="CENTER" relativeTo="$parent">
		<Offset>
		    <AbsDimension x="1" y="-1"/>
		</Offset>
	    </Anchor>
	</Anchors>
	<Color r="0.5" g="0.1" b="0.2" a="0.6"/>
	<Shadow>
	    <offset>
		<AbsDimension x="0.3" y="0.3" />
	    </offset>
	    <color r="0" g="0" b="0" />
	</Shadow>
    </FontString> <!-- }}} -->


    <Script>
	DcrLoadedFiles["Dcr_DebuffsFrame.xml"] = "@project-version@";
    </Script>
</Ui>
